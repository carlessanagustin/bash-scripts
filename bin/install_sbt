#!/bin/bash -e

function __install_sbt_activator() {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  local activator="${1}"
  local version="${2}"

  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD > "${config}"
#!/bin/bash

export SBT_VERSION=${version}
export SBT_HOME=\${TOOLS_HOME:=\$HOME/tools}/sbt-\${SBT_VERSION}

export PATH=\${SBT_HOME}/bin:\${PATH}
EOD
  chmod ugo+x "${config}"
  echo "${config}"
}    

function __install_sbt() {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  which curl >/dev/null 2>&1 || sudo aptitude install -y curl

  local url=https://github.com/sbt/sbt/releases/latest
  local current="${SBT_VERSION}"
  local default="1.3.13"

  local latest="$(curl -I ${url} 2>/dev/null | fgrep location: | tr -d [:cntrl:] | cut -d' ' -f2 | sed -E 's|.*\/v(.*)|\1|')"
  local version="${1:-${latest}}"        # user can force a version, passing it on the first parameter
  local version="${version:-${current}}" # falls back to current installed version, if any
  local version="${version:-${default}}" # falls back to default version

  local file=sbt-${version}.tgz
  local url=https://github.com/sbt/sbt/releases/download/v${version}/sbt-${version}.tgz
  local folder=sbt-${version}
  local symlink=sbt

  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/350-sbt.sh
   __install_sbt_activator "${config}" "${version}"

  "${dir}"/bash_install_tar "${url}" "${file}" "${folder}" "${symlink}" "--strip-components=1"
}

if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
